"""Initial migration

Revision ID: f9410219744f
Revises: 
Create Date: 2025-01-12 01:54:14.499956

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f9410219744f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('price_per_night', sa.Float(), nullable=False),
    sa.Column('availability', sa.Boolean(), nullable=True),
    sa.Column('max_guests', sa.Integer(), nullable=False),
    sa.Column('amenities', sa.String(length=500), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=500), nullable=False),
    sa.Column('preferred_hotel_chain', sa.String(length=100), nullable=True),
    sa.Column('loyalty_points', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("email ~* '^[A-Za-z0-9._%%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$'", name='valid_email'),
    sa.CheckConstraint('LENGTH(password) >= 8', name='password_min_length'),
    sa.CheckConstraint('LENGTH(username) >= 3', name='username_min_length'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=2000), nullable=False),
    sa.Column('response', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('follow_up_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversation', schema=None) as batch_op:
        batch_op.create_index('idx_conversation_user_id', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_user_id'), ['user_id'], unique=False)

    op.create_table('follow_up',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=1000), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('follow_up', schema=None) as batch_op:
        batch_op.create_index('idx_follow_up_user_id', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_follow_up_user_id'), ['user_id'], unique=False)

    op.create_table('memory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('memory', schema=None) as batch_op:
        batch_op.create_index('idx_memory_user_id', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_memory_user_id'), ['user_id'], unique=False)

    op.create_table('reservation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('check_in_date', sa.DateTime(), nullable=False),
    sa.Column('check_out_date', sa.DateTime(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reservation')
    with op.batch_alter_table('memory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_memory_user_id'))
        batch_op.drop_index('idx_memory_user_id')

    op.drop_table('memory')
    with op.batch_alter_table('follow_up', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_follow_up_user_id'))
        batch_op.drop_index('idx_follow_up_user_id')

    op.drop_table('follow_up')
    with op.batch_alter_table('conversation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversation_user_id'))
        batch_op.drop_index('idx_conversation_user_id')

    op.drop_table('conversation')
    op.drop_table('user')
    op.drop_table('room')
    # ### end Alembic commands ###
